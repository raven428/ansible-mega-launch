---
- name: Ensure service for start failure tests
  ansible.builtin.systemd:
    name: "{{ unit_name }}"
    force: true
    no_block: false
    state: "{{ 'started' if prop_mode.startswith('mod_run_') or
      prop_mode.startswith('start_run_') else 'stopped' }}"
    daemon_reload: true
  register: melau_result_systemd
  check_mode: false
  until: "melau_result_systemd.status.ActiveState == ('' if prop_mode.startswith
    ('mod_run_') or prop_mode.startswith('start_run_') else 'in') + 'active'"
  retries: 3
  delay: 1

- name: Remove part of config for crashes at launch
  ansible.builtin.shell:
    executable: /bin/bash
    cmd: /usr/bin/env mv -f '{{ service_home }}/data/priv_validator_state.json'
      '{{ service_home }}/data/priv_validator_state.json1'
  changed_when: false
  when: "prop_mode.endswith('_zero_fail')"

- name: Block for failures
  block:
    - name: Start with too many required checks
      ansible.builtin.include_role:
        name: ansible-mega-launch
      vars:
        start_enable: "{{ true if prop_mode.startswith('start_') else false }}"
        start_mod_enable: "{{ true if prop_mode.startswith('mod_') else false }}"
        service_name: "{{ unit_name }}"
        port_list:
          - 9090
          - 9091
          - 26656
          - 26657
        log_regexp: "{{ regexp_line }}"
        max_rescues: 2
        rescue_delay: 1
        check_retries: 3
        required_checks: 3
  rescue:
    - name: Set fact to success converge
      ansible.builtin.set_fact:
        rescue_happened: true

- name: Check rescue happened
  when: "not rescue_happened | default(false) and not ansible_check_mode"
  ansible.builtin.fail:
    msg: Rescue isn't happened when [{{ prop_mode }}] should failure

- name: Test debug
  ansible.builtin.debug:
    var: melau_result_check

- name: Assert rescue happened
  ansible.builtin.assert:
    that: rescue_happened | default(false) and mega_launch.stderr_lines |
      default([]) | length == 0 or ansible_check_mode
    fail_msg: Rescue [{{ prop_mode }}] should failure
    success_msg: Rescue [{{ prop_mode }}] happened

- name: Return part of config to avoid crashes
  ansible.builtin.shell:
    executable: /bin/bash
    cmd: /usr/bin/env mv -f '{{ service_home }}/data/priv_validator_state.json1'
      '{{ service_home }}/data/priv_validator_state.json'
  changed_when: false
  when: "prop_mode.endswith('_zero_fail')"
